### Note that depending on the file format selected, the parameters in the data section can vary
### You should refer to the documentation to know what are the needed parameters for a given
### file format. Otherwise, launch the code and a message will tell you what is needed

[data]
file_format    = openephys             # Can be raw_binary, openephys, hdf5, ... See >> spyking-circus help -i for more info
stream_mode    = None                  # None by default. Can be multi-files, or anything depending to the file format
mapping        = mauro.prb             # Mapping of the electrode (see http://spyking-circus.rtfd.ord)
suffix         =                       # Suffix to add to generated files, if needed
overwrite      = True                  # Filter or remove artefacts on site (if write access is possible). Data are duplicated otherwise
parallel_hdf5  = True                  # Use the parallel HDF5 feature (if available)
output_dir     = results               # By default, generated data are in the same folder as the data.

[detection]
# prb has radio = 0. Check if the right value is 0 or the diameter of the electrode
# [Docs] In vivo, a spike can be seen 100 um away, so this is the default radius you should have in probe or params file
radius         = auto       # Radius [in um] (if auto, read from the prb file)
# N_t            = auto       # Width of the templates [in ms] (if auto, adjusted while whitening)
N_t            = 2          # [Doc] Temporal width of template. For in vivo, use 3 or even 2 ms. If template is smaller, reduce it
# spike_thresh   = 6          # Threshold for spike detection
spike_thresh   = 3          # [RH] Set to 3 because few spikes
peaks          = negative   # Can be negative (default), positive or both
alignment      = True       # Realign the waveforms by oversampling
dead_channels  =            # If not empty or specified in the probe, a dictionary {channel_group : [list_of_valid_ids]}

[filtering]
# cut_off        = 300, auto  # Min and Max (auto=nyquist) cut off frequencies for the band pass butterworth filter [Hz]
cut_off        = 300, auto  # [RH] Max set to 10000
filter         = True       # If True, then a low-pass filtering is performed
# remove_median  = False      # If True, median over all channels is substracted to each channels (movement artifacts) (but I have only one channel!!)
remove_median  = False      # [Docs] If you have some artifact in your in vivo recording and want to substract median over all channels from each individual channel
common_ground  =            # If you want to use a particular channel as a reference ground: should be a channel number

[triggers]
trig_file      =            # External stimuli to be considered as putative artefacts [in trig units] (see documentation)
trig_windows   =            # The time windows of those external stimuli [in trig units]
trig_unit      = ms         # The unit in which times are expressed: can be ms or timestep
clean_artefact = False      # If True, external artefacts induced by triggers will be suppressed from data
dead_file      =            # Portion of the signals that should be excluded from the analysis [in dead units]
dead_unit      = ms         # The unit in which times for dead regions are expressed: can be ms or timestep
ignore_times   = False      # If True, any spike in the dead regions will be ignored by the analysis
make_plots     =            # Generate sanity plots of the averaged artefacts [Nothing or None if no plots]

[whitening]
chunk_size     = 30         # Size of the data chunks [in s]
safety_time    = auto       # Temporal zone around which templates are isolated [in ms, or auto]
# spatial        = True       # Perform spatial whitening
spatial        = True       # [RH] False
# max_elts       = 1000       # Max number of events per electrode (should be compatible with nb_elts)
max_elts       = 1000       # [RH] Set to 5000
nb_elts        = 0.8        # Fraction of max_elts that should be obtained per electrode [0-1]
output_dim     = 5          # Can be in percent of variance explain, or num of dimensions for PCA on waveforms

[clustering]
extraction     = median-raw # Can be either median-raw (default), median-pca, mean-pca, mean-raw
safety_space   = True       # If True, we exclude spikes in the vicinity of a selected spikes
safety_time    = auto       # Temporal zone around which templates are isolated [in ms, or auto]
max_elts       = 10000      # Max number of events per electrode (should be compatible with nb_elts)
nb_elts        = 0.8        # Fraction of max_elts that should be obtained per electrode [0-1]
nclus_min      = 0.005      # Min number of elements in a cluster (given in percentage) [0-1]
nb_repeats     = 3          # Number of passes used for the clustering
smart_search   = True       # Activate the smart search mode
# Reducing sim_same_elec (never less than 0) reduces local merges; increasing cc_merge (never greater than 1) reduce global merges.
# sim_same_elec  = 3          # Distance within clusters under which they are re-merged. [Docs] Says it is a *former* parameter
sim_same_elec  = 1          # [Docs] If you see templates that are mixtures of two templates, merge is too agressive. Play with cc_merge, max_clusters and sim_same_elec
# sensitivity    = 3          # Single parameter for clustering sensitivity. The lower the more sensitive
sensitivity    = 2          # [RH] Set to 1, because fit had too much dispersion. Pierre suggested greater than 1
# cc_merge       = 0.975      # If CC between two templates is higher, they are merged
cc_merge       = 1          # [Docs] If you have single channel (or spaced more than 50 um) set to 1, to ensure tamplates that are scaled copies are not merged automatically
dispersion     = (5, 5)     # Min and Max dispersion allowed for amplitudes [in MAD]
noise_thr      = 0.8        # Minimal amplitudes are such than amp*min(templates) < noise_thr*threshold in [0-1]
remove_mixture = True       # At the end of the clustering, we remove mixtures of templates
cc_mixtures    = 0.75       # If CC between a sum of two templates and a template is higher, it is removed
make_plots     = png        # Generate sanity plots of the clustering [Nothing or None if no plots]

[fitting]
# Documentation says (0.3, 30)!!!
chunk_size     = 1          # Size of chunks used during fitting [in second]
amp_limits     = (0.3, 5)   # Amplitudes for the templates during spike detection [if not auto]
amp_auto       = True       # True if amplitudes are adjusted automatically for every templates
max_chunk      = inf        # Fit only up to max_chunk
collect_all    = False      # If True, one garbage template per electrode is created, to store unfitted spikes

[merging]
# cc_overlap     = 0.7       # Only templates with CC higher than cc_overlap may be merged
# Check if the logic behind is right!!!
cc_overlap     = 1          # [RH] Set to 1 because 1 channel.
######################################################################################
cc_bin         = 2          # Bin size for computing CC [in ms]
correct_lag    = True       # If spikes are aligned when merging. May be better for phy usage
# auto_mode      = 0.75       # Between 0 (aggressive) and 1 (no merging). If empty, GUI is launched
auto_mode      = 0.99999    # [Docs] See Auto merging for more details [RH] Set to 0 (¿¿???)

[converting]
erase_all      = True       # If False, a prompt will ask you to export if export has already been done
export_pcs     = prompt     # Can be prompt [default] or in none, all, some
export_all     = False      # If True, unfitted spikes will be exported as the last Ne templates
# Check the following parameter!! RH set it to False
sparse_export  = False      # For recent versions of phy, and large number of templates/channels

[validating]
# [Docs] Get in touch with us if you want to use it, Only for validation purposes.
nearest_elec   = auto       # Validation channel (e.g. electrode closest to the ground truth cell)
max_iter       = 200        # Maximum number of iterations of the stochastic gradient descent (SGD)
learning_rate  = 1.0e-3     # Initial learning rate which controls the step-size of the SGD
roc_sampling   = 10         # Number of points to estimate the ROC curve of the BEER estimate
test_size      = 0.3        # Portion of the dataset to include in the test split
radius_factor  = 0.5        # Radius factor to modulate physical radius during validation
juxta_dtype    = uint16     # Type of the juxtacellular data
juxta_thresh   = 6          # Threshold for juxtacellular detection
juxta_valley   = False      # True if juxta-cellular spikes are negative peaks
juxta_spikes   =            # If none, spikes are automatically detected based on juxta_thresh
filter         = True       # If the juxta channel need to be filtered or not
make_plots     = png        # Generate sanity plots of the validation [Nothing or None if no plots]

[extracting]
# [Docs] This is an experimental section, not used by default, so nothing to change
safety_time    = 1          # Temporal zone around which spikes are isolated [in ms]
max_elts       = 1000       # Max number of collected events per templates
output_dim     = 5          # Percentage of variance explained while performing PCA
cc_merge       = 0.975      # If CC between two templates is higher, they are merged
noise_thr      = 0.8        # Minimal amplitudes are such than amp*min(templates) < noise_thr*threshold

[noedits]
filter_done    = False      # Will become True automatically after filtering
artefacts_done = False      # Will become True automatically after removing artefacts
median_done    = False      # Will become True automatically after removing common median
ground_done    = False      # Will become True automatically after removing common ground
